#
#   esp-windows-default.nmake -- Makefile to build Embedthis ESP for windows
#

NAME                  = esp
VERSION               = 9.0.1

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = default
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_LIB)" == ""
ME_COM_LIB            = 1
!ENDIF
!IF "$(ME_COM_LINK)" == ""
ME_COM_LINK           = 1
!ENDIF
!IF "$(ME_COM_MATRIXSSL)" == ""
ME_COM_MATRIXSSL      = 0
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == ""
ME_COM_MBEDTLS        = 1
!ENDIF
!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF
!IF "$(ME_COM_MPR)" == ""
ME_COM_MPR            = 1
!ENDIF
!IF "$(ME_COM_NANOSSL)" == ""
ME_COM_NANOSSL        = 0
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_RC)" == ""
ME_COM_RC             = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 1
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF

!IF "$(ME_COM_OPENSSL_PATH)" == ""
ME_COM_OPENSSL_PATH   = "/path/to/openssl"
!ENDIF

!IF "$(ME_COM_LIB)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_LINK)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_MBEDTLS)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_OPENSSL)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_RC)" == "1"
ME_COM_COMPILER       = 1
!ENDIF


CC                    = cl
LD                    = link
AR                    = lib
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -DME_DEBUG=1 -DME_COM_COMPILER=$(ME_COM_COMPILER) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_LIB=$(ME_COM_LIB) -DME_COM_LINK=$(ME_COM_LINK) -DME_COM_MATRIXSSL=$(ME_COM_MATRIXSSL) -DME_COM_MBEDTLS=$(ME_COM_MBEDTLS) -DME_COM_MDB=$(ME_COM_MDB) -DME_COM_MPR=$(ME_COM_MPR) -DME_COM_NANOSSL=$(ME_COM_NANOSSL) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_RC=$(ME_COM_RC) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -incremental:no -dynamicbase -nxcompat -debug -machine:x64
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis ESP
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\.extras-modified
TARGETS               = $(TARGETS) build\$(CONFIG)\.install-certs-modified
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\server.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\espman.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\esp-windows-default-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\edi.obj" del /Q "build\$(CONFIG)\obj\edi.obj"
	if exist "build\$(CONFIG)\obj\esp.obj" del /Q "build\$(CONFIG)\obj\esp.obj"
	if exist "build\$(CONFIG)\obj\espAbbrev.obj" del /Q "build\$(CONFIG)\obj\espAbbrev.obj"
	if exist "build\$(CONFIG)\obj\espConfig.obj" del /Q "build\$(CONFIG)\obj\espConfig.obj"
	if exist "build\$(CONFIG)\obj\espFramework.obj" del /Q "build\$(CONFIG)\obj\espFramework.obj"
	if exist "build\$(CONFIG)\obj\espHtml.obj" del /Q "build\$(CONFIG)\obj\espHtml.obj"
	if exist "build\$(CONFIG)\obj\espRequest.obj" del /Q "build\$(CONFIG)\obj\espRequest.obj"
	if exist "build\$(CONFIG)\obj\espTemplate.obj" del /Q "build\$(CONFIG)\obj\espTemplate.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\mbedtls.obj" del /Q "build\$(CONFIG)\obj\mbedtls.obj"
	if exist "build\$(CONFIG)\obj\mdb.obj" del /Q "build\$(CONFIG)\obj\mdb.obj"
	if exist "build\$(CONFIG)\obj\mpr-mbedtls.obj" del /Q "build\$(CONFIG)\obj\mpr-mbedtls.obj"
	if exist "build\$(CONFIG)\obj\mpr-openssl.obj" del /Q "build\$(CONFIG)\obj\mpr-openssl.obj"
	if exist "build\$(CONFIG)\obj\mpr-version.obj" del /Q "build\$(CONFIG)\obj\mpr-version.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\sdb.obj" del /Q "build\$(CONFIG)\obj\sdb.obj"
	if exist "build\$(CONFIG)\obj\server.obj" del /Q "build\$(CONFIG)\obj\server.obj"
	if exist "build\$(CONFIG)\obj\sqlite.obj" del /Q "build\$(CONFIG)\obj\sqlite.obj"
	if exist "build\$(CONFIG)\obj\sqlite3.obj" del /Q "build\$(CONFIG)\obj\sqlite3.obj"
	if exist "build\$(CONFIG)\obj\watchdog.obj" del /Q "build\$(CONFIG)\obj\watchdog.obj"
	if exist "build\$(CONFIG)\bin\esp.exe" del /Q "build\$(CONFIG)\bin\esp.exe"
	if exist "build\$(CONFIG)\bin\esp.lib" del /Q "build\$(CONFIG)\bin\esp.lib"
	if exist "build\$(CONFIG)\bin\esp.pdb" del /Q "build\$(CONFIG)\bin\esp.pdb"
	if exist "build\$(CONFIG)\bin\esp.exp" del /Q "build\$(CONFIG)\bin\esp.exp"
	if exist "build\$(CONFIG)\.extras-modified" del /Q "build\$(CONFIG)\.extras-modified"
	if exist "build\$(CONFIG)\.install-certs-modified" del /Q "build\$(CONFIG)\.install-certs-modified"
	if exist "build\$(CONFIG)\bin\libesp.dll" del /Q "build\$(CONFIG)\bin\libesp.dll"
	if exist "build\$(CONFIG)\bin\libesp.lib" del /Q "build\$(CONFIG)\bin\libesp.lib"
	if exist "build\$(CONFIG)\bin\libesp.pdb" del /Q "build\$(CONFIG)\bin\libesp.pdb"
	if exist "build\$(CONFIG)\bin\libesp.exp" del /Q "build\$(CONFIG)\bin\libesp.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmbedtls.lib" del /Q "build\$(CONFIG)\bin\libmbedtls.lib"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmpr-mbedtls.lib" del /Q "build\$(CONFIG)\bin\libmpr-mbedtls.lib"
	if exist "build\$(CONFIG)\bin\libmpr-version.lib" del /Q "build\$(CONFIG)\bin\libmpr-version.lib"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libsql.dll" del /Q "build\$(CONFIG)\bin\libsql.dll"
	if exist "build\$(CONFIG)\bin\libsql.lib" del /Q "build\$(CONFIG)\bin\libsql.lib"
	if exist "build\$(CONFIG)\bin\libsql.pdb" del /Q "build\$(CONFIG)\bin\libsql.pdb"
	if exist "build\$(CONFIG)\bin\libsql.exp" del /Q "build\$(CONFIG)\bin\libsql.exp"
	if exist "build\$(CONFIG)\bin\server.exe" del /Q "build\$(CONFIG)\bin\server.exe"
	if exist "build\$(CONFIG)\bin\server.lib" del /Q "build\$(CONFIG)\bin\server.lib"
	if exist "build\$(CONFIG)\bin\server.pdb" del /Q "build\$(CONFIG)\bin\server.pdb"
	if exist "build\$(CONFIG)\bin\server.exp" del /Q "build\$(CONFIG)\bin\server.exp"
	if exist "build\$(CONFIG)\bin\espman.exe" del /Q "build\$(CONFIG)\bin\espman.exe"
	if exist "build\$(CONFIG)\bin\espman.lib" del /Q "build\$(CONFIG)\bin\espman.lib"
	if exist "build\$(CONFIG)\bin\espman.pdb" del /Q "build\$(CONFIG)\bin\espman.pdb"
	if exist "build\$(CONFIG)\bin\espman.exp" del /Q "build\$(CONFIG)\bin\espman.exp"

#
#   config.h
#

build\$(CONFIG)\inc\config.h: $(DEPS_1)

#
#   edi.h
#
DEPS_2 = $(DEPS_2) src\edi.h

build\$(CONFIG)\inc\edi.h: $(DEPS_2)
	@echo ..... [Copy] build\$(CONFIG)\inc\edi.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\edi.h+modified build\$(CONFIG)\inc\edi.h $(LOG)

#
#   embedtls.h
#
DEPS_3 = $(DEPS_3) src\mbedtls\embedtls.h

build\$(CONFIG)\inc\embedtls.h: $(DEPS_3)
	@echo ..... [Copy] build\$(CONFIG)\inc\embedtls.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mbedtls\embedtls.h+modified build\$(CONFIG)\inc\embedtls.h $(LOG)

#
#   esp.h
#
DEPS_4 = $(DEPS_4) src\esp.h

build\$(CONFIG)\inc\esp.h: $(DEPS_4)
	@echo ..... [Copy] build\$(CONFIG)\inc\esp.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\esp.h+modified build\$(CONFIG)\inc\esp.h $(LOG)

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_5)

#
#   osdep.h
#
DEPS_6 = $(DEPS_6) src\osdep\osdep.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_6)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_7 = $(DEPS_7) src\mpr\mpr.h
DEPS_7 = $(DEPS_7) build\$(CONFIG)\inc\me.h
DEPS_7 = $(DEPS_7) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_7)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   http.h
#
DEPS_8 = $(DEPS_8) src\http\http.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_8)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\http\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   mbedtls-config.h
#
DEPS_9 = $(DEPS_9) src\mbedtls\mbedtls-config.h

build\$(CONFIG)\inc\mbedtls-config.h: $(DEPS_9)
	@echo ..... [Copy] build\$(CONFIG)\inc\mbedtls-config.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mbedtls\mbedtls-config.h+modified build\$(CONFIG)\inc\mbedtls-config.h $(LOG)

#
#   mbedtls.h
#
DEPS_10 = $(DEPS_10) src\mbedtls\mbedtls.h

build\$(CONFIG)\inc\mbedtls.h: $(DEPS_10)
	@echo ..... [Copy] build\$(CONFIG)\inc\mbedtls.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mbedtls\mbedtls.h+modified build\$(CONFIG)\inc\mbedtls.h $(LOG)

#
#   mdb.h
#
DEPS_11 = $(DEPS_11) src\mdb.h

build\$(CONFIG)\inc\mdb.h: $(DEPS_11)
	@echo ..... [Copy] build\$(CONFIG)\inc\mdb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mdb.h+modified build\$(CONFIG)\inc\mdb.h $(LOG)

#
#   mpr-version.h
#
DEPS_12 = $(DEPS_12) src\mpr-version\mpr-version.h
DEPS_12 = $(DEPS_12) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\mpr-version.h: $(DEPS_12)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr-version.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mpr-version\mpr-version.h+modified build\$(CONFIG)\inc\mpr-version.h $(LOG)

#
#   pcre.h
#
DEPS_13 = $(DEPS_13) src\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_13)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   sqlite3.h
#
DEPS_14 = $(DEPS_14) src\sqlite\sqlite3.h

build\$(CONFIG)\inc\sqlite3.h: $(DEPS_14)
	@echo ..... [Copy] build\$(CONFIG)\inc\sqlite3.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\sqlite\sqlite3.h+modified build\$(CONFIG)\inc\sqlite3.h $(LOG)

#
#   sqlite3rtree.h
#

build\$(CONFIG)\inc\sqlite3rtree.h: $(DEPS_15)

#
#   windows.h
#

build\$(CONFIG)\inc\windows.h: $(DEPS_16)

#
#   edi.h
#

src\edi.h: $(DEPS_17)

#
#   edi.obj
#
DEPS_18 = $(DEPS_18) src\edi.h
DEPS_18 = $(DEPS_18) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\edi.obj: \
    src\edi.c $(DEPS_18)
	@echo .. [Compile] build\$(CONFIG)\obj\edi.obj
	"$(CC)" -c -Fo$(BUILD)\obj\edi.obj -Fd$(BUILD)\obj\edi.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\edi.c $(LOG)

#
#   esp.h
#

src\esp.h: $(DEPS_19)

#
#   esp.obj
#
DEPS_20 = $(DEPS_20) src\esp.h
DEPS_20 = $(DEPS_20) build\$(CONFIG)\inc\mpr-version.h

build\$(CONFIG)\obj\esp.obj: \
    src\esp.c $(DEPS_20)
	@echo .. [Compile] build\$(CONFIG)\obj\esp.obj
	"$(CC)" -c -Fo$(BUILD)\obj\esp.obj -Fd$(BUILD)\obj\esp.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\esp.c $(LOG)

#
#   espAbbrev.obj
#
DEPS_21 = $(DEPS_21) src\esp.h

build\$(CONFIG)\obj\espAbbrev.obj: \
    src\espAbbrev.c $(DEPS_21)
	@echo .. [Compile] build\$(CONFIG)\obj\espAbbrev.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espAbbrev.obj -Fd$(BUILD)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\espAbbrev.c $(LOG)

#
#   espConfig.obj
#
DEPS_22 = $(DEPS_22) src\esp.h

build\$(CONFIG)\obj\espConfig.obj: \
    src\espConfig.c $(DEPS_22)
	@echo .. [Compile] build\$(CONFIG)\obj\espConfig.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espConfig.obj -Fd$(BUILD)\obj\espConfig.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\espConfig.c $(LOG)

#
#   espFramework.obj
#
DEPS_23 = $(DEPS_23) src\esp.h

build\$(CONFIG)\obj\espFramework.obj: \
    src\espFramework.c $(DEPS_23)
	@echo .. [Compile] build\$(CONFIG)\obj\espFramework.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espFramework.obj -Fd$(BUILD)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\espFramework.c $(LOG)

#
#   espHtml.obj
#
DEPS_24 = $(DEPS_24) src\esp.h
DEPS_24 = $(DEPS_24) src\edi.h

build\$(CONFIG)\obj\espHtml.obj: \
    src\espHtml.c $(DEPS_24)
	@echo .. [Compile] build\$(CONFIG)\obj\espHtml.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espHtml.obj -Fd$(BUILD)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\espHtml.c $(LOG)

#
#   espRequest.obj
#
DEPS_25 = $(DEPS_25) src\esp.h

build\$(CONFIG)\obj\espRequest.obj: \
    src\espRequest.c $(DEPS_25)
	@echo .. [Compile] build\$(CONFIG)\obj\espRequest.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espRequest.obj -Fd$(BUILD)\obj\espRequest.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\espRequest.c $(LOG)

#
#   espTemplate.obj
#
DEPS_26 = $(DEPS_26) src\esp.h

build\$(CONFIG)\obj\espTemplate.obj: \
    src\espTemplate.c $(DEPS_26)
	@echo .. [Compile] build\$(CONFIG)\obj\espTemplate.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espTemplate.obj -Fd$(BUILD)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\espTemplate.c $(LOG)

#
#   http.h
#

src\http\http.h: $(DEPS_27)

#
#   http.obj
#
DEPS_28 = $(DEPS_28) src\http\http.h

build\$(CONFIG)\obj\http.obj: \
    src\http\http.c $(DEPS_28)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\http\http.c $(LOG)

#
#   httpLib.obj
#
DEPS_29 = $(DEPS_29) src\http\http.h
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\httpLib.obj: \
    src\http\httpLib.c $(DEPS_29)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\http\httpLib.c $(LOG)

#
#   mbedtls.h
#

src\mbedtls\mbedtls.h: $(DEPS_30)

#
#   mbedtls.obj
#
DEPS_31 = $(DEPS_31) src\mbedtls\mbedtls.h

build\$(CONFIG)\obj\mbedtls.obj: \
    src\mbedtls\mbedtls.c $(DEPS_31)
	@echo .. [Compile] build\$(CONFIG)\obj\mbedtls.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mbedtls.obj -Fd$(BUILD)\obj\mbedtls.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" $(IFLAGS) src\mbedtls\mbedtls.c $(LOG)

#
#   mdb.h
#

src\mdb.h: $(DEPS_32)

#
#   mdb.obj
#
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\http.h
DEPS_33 = $(DEPS_33) src\edi.h
DEPS_33 = $(DEPS_33) src\mdb.h
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\mdb.obj: \
    src\mdb.c $(DEPS_33)
	@echo .. [Compile] build\$(CONFIG)\obj\mdb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mdb.obj -Fd$(BUILD)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\mdb.c $(LOG)

#
#   mpr-mbedtls.obj
#
DEPS_34 = $(DEPS_34) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mpr-mbedtls.obj: \
    src\mpr-mbedtls\mpr-mbedtls.c $(DEPS_34)
	@echo .. [Compile] build\$(CONFIG)\obj\mpr-mbedtls.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mpr-mbedtls.obj -Fd$(BUILD)\obj\mpr-mbedtls.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" $(IFLAGS) src\mpr-mbedtls\mpr-mbedtls.c $(LOG)

#
#   mpr-openssl.obj
#
DEPS_35 = $(DEPS_35) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mpr-openssl.obj: \
    src\mpr-openssl\mpr-openssl.c $(DEPS_35)
	@echo .. [Compile] build\$(CONFIG)\obj\mpr-openssl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mpr-openssl.obj -Fd$(BUILD)\obj\mpr-openssl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(BUILD)\inc" "-I$(ME_COM_OPENSSL_PATH)\inc32" src\mpr-openssl\mpr-openssl.c $(LOG)

#
#   mpr-version.h
#

src\mpr-version\mpr-version.h: $(DEPS_36)

#
#   mpr-version.obj
#
DEPS_37 = $(DEPS_37) src\mpr-version\mpr-version.h
DEPS_37 = $(DEPS_37) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\mpr-version.obj: \
    src\mpr-version\mpr-version.c $(DEPS_37)
	@echo .. [Compile] build\$(CONFIG)\obj\mpr-version.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mpr-version.obj -Fd$(BUILD)\obj\mpr-version.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mpr-version\mpr-version.c $(LOG)

#
#   mpr.h
#

src\mpr\mpr.h: $(DEPS_38)

#
#   mprLib.obj
#
DEPS_39 = $(DEPS_39) src\mpr\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\mpr\mprLib.c $(DEPS_39)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\mpr\mprLib.c $(LOG)

#
#   pcre.h
#

src\pcre\pcre.h: $(DEPS_40)

#
#   pcre.obj
#
DEPS_41 = $(DEPS_41) build\$(CONFIG)\inc\me.h
DEPS_41 = $(DEPS_41) src\pcre\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\pcre\pcre.c $(DEPS_41)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre\pcre.c $(LOG)

#
#   sdb.obj
#
DEPS_42 = $(DEPS_42) build\$(CONFIG)\inc\http.h
DEPS_42 = $(DEPS_42) src\edi.h

build\$(CONFIG)\obj\sdb.obj: \
    src\sdb.c $(DEPS_42)
	@echo .. [Compile] build\$(CONFIG)\obj\sdb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sdb.obj -Fd$(BUILD)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\sdb.c $(LOG)

#
#   server.obj
#
DEPS_43 = $(DEPS_43) src\http\http.h

build\$(CONFIG)\obj\server.obj: \
    src\http\server.c $(DEPS_43)
	@echo .. [Compile] build\$(CONFIG)\obj\server.obj
	"$(CC)" -c -Fo$(BUILD)\obj\server.obj -Fd$(BUILD)\obj\server.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\http\server.c $(LOG)

#
#   sqlite3.h
#

src\sqlite\sqlite3.h: $(DEPS_44)

#
#   sqlite.obj
#
DEPS_45 = $(DEPS_45) build\$(CONFIG)\inc\me.h
DEPS_45 = $(DEPS_45) src\sqlite\sqlite3.h
DEPS_45 = $(DEPS_45) build\$(CONFIG)\inc\windows.h

build\$(CONFIG)\obj\sqlite.obj: \
    src\sqlite\sqlite.c $(DEPS_45)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite.obj -Fd$(BUILD)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite\sqlite.c $(LOG)

#
#   sqlite3.obj
#
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\me.h
DEPS_46 = $(DEPS_46) src\sqlite\sqlite3.h
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\config.h
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\windows.h
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\sqlite3rtree.h

build\$(CONFIG)\obj\sqlite3.obj: \
    src\sqlite\sqlite3.c $(DEPS_46)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite3.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite3.obj -Fd$(BUILD)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite\sqlite3.c $(LOG)

#
#   watchdog.obj
#
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\watchdog.obj: \
    src\watchdog\watchdog.c $(DEPS_47)
	@echo .. [Compile] build\$(CONFIG)\obj\watchdog.obj
	"$(CC)" -c -Fo$(BUILD)\obj\watchdog.obj -Fd$(BUILD)\obj\watchdog.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\watchdog\watchdog.c $(LOG)

!IF "$(ME_COM_SQLITE)" == "1"
#
#   libsql
#
DEPS_48 = $(DEPS_48) build\$(CONFIG)\inc\sqlite3.h
DEPS_48 = $(DEPS_48) build\$(CONFIG)\obj\sqlite3.obj

build\$(CONFIG)\bin\libsql.dll: $(DEPS_48)
	@echo ..... [Link] build\$(CONFIG)\bin\libsql.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libsql.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\sqlite3.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_MBEDTLS)" == "1"
#
#   libmbedtls
#
DEPS_49 = $(DEPS_49) build\$(CONFIG)\inc\osdep.h
DEPS_49 = $(DEPS_49) build\$(CONFIG)\inc\embedtls.h
DEPS_49 = $(DEPS_49) build\$(CONFIG)\inc\mbedtls-config.h
DEPS_49 = $(DEPS_49) build\$(CONFIG)\inc\mbedtls.h
DEPS_49 = $(DEPS_49) build\$(CONFIG)\obj\mbedtls.obj

build\$(CONFIG)\bin\libmbedtls.lib: $(DEPS_49)
	@echo ..... [Link] build\$(CONFIG)\bin\libmbedtls.lib
	"$(AR)" -nologo -out:$(BUILD)\bin\libmbedtls.lib "$(BUILD)\obj\mbedtls.obj" $(LOG)
!ENDIF

!IF "$(ME_COM_MBEDTLS)" == "1"
#
#   libmpr-mbedtls
#
DEPS_50 = $(DEPS_50) build\$(CONFIG)\bin\libmbedtls.lib
DEPS_50 = $(DEPS_50) build\$(CONFIG)\obj\mpr-mbedtls.obj

build\$(CONFIG)\bin\libmpr-mbedtls.lib: $(DEPS_50)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-mbedtls.lib
	"$(AR)" -nologo -out:$(BUILD)\bin\libmpr-mbedtls.lib "$(BUILD)\obj\mpr-mbedtls.obj" $(LOG)
!ENDIF

!IF "$(ME_COM_OPENSSL)" == "1"
#
#   libmpr-openssl
#
DEPS_51 = $(DEPS_51) build\$(CONFIG)\obj\mpr-openssl.obj

build\$(CONFIG)\bin\libmpr-openssl.lib: $(DEPS_51)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-openssl.lib
	"$(AR)" -nologo -out:$(BUILD)\bin\libmpr-openssl.lib "$(BUILD)\obj\mpr-openssl.obj" $(LOG)
!ENDIF

#
#   libmpr
#
DEPS_52 = $(DEPS_52) build\$(CONFIG)\inc\osdep.h
!IF "$(ME_COM_MBEDTLS)" == "1"
DEPS_52 = $(DEPS_52) build\$(CONFIG)\bin\libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
DEPS_52 = $(DEPS_52) build\$(CONFIG)\bin\libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
DEPS_52 = $(DEPS_52) build\$(CONFIG)\bin\libmpr-openssl.lib
!ENDIF
DEPS_52 = $(DEPS_52) build\$(CONFIG)\inc\mpr.h
DEPS_52 = $(DEPS_52) build\$(CONFIG)\obj\mprLib.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_52 = $(LIBS_52) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_52 = $(LIBS_52) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_52 = $(LIBS_52) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_52 = $(LIBS_52) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_52 = $(LIBS_52) gdi32.lib
LIBPATHS_52 = $(LIBPATHS_52) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_52 = $(LIBS_52) libeay32.lib
LIBPATHS_52 = $(LIBPATHS_52) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_52 = $(LIBS_52) ssleay32.lib
LIBPATHS_52 = $(LIBPATHS_52) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_52 = $(LIBS_52) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_52 = $(LIBS_52) libmpr-mbedtls.lib
!ENDIF

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_52)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\mprLib.obj" $(LIBPATHS_52) $(LIBS_52) $(LIBS)  $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_53 = $(DEPS_53) build\$(CONFIG)\inc\pcre.h
DEPS_53 = $(DEPS_53) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_53)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_54 = $(DEPS_54) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_54 = $(DEPS_54) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_54 = $(DEPS_54) build\$(CONFIG)\inc\http.h
DEPS_54 = $(DEPS_54) build\$(CONFIG)\obj\httpLib.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_54 = $(LIBS_54) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_54 = $(LIBS_54) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_54 = $(LIBS_54) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_54 = $(LIBS_54) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_54 = $(LIBS_54) gdi32.lib
LIBPATHS_54 = $(LIBPATHS_54) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_54 = $(LIBS_54) libeay32.lib
LIBPATHS_54 = $(LIBPATHS_54) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_54 = $(LIBS_54) ssleay32.lib
LIBPATHS_54 = $(LIBPATHS_54) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_54 = $(LIBS_54) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_54 = $(LIBS_54) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_54 = $(LIBS_54) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_54 = $(LIBS_54) libpcre.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_54 = $(LIBS_54) libpcre.lib
!ENDIF
LIBS_54 = $(LIBS_54) libmpr.lib

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_54)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\httpLib.obj" $(LIBPATHS_54) $(LIBS_54) $(LIBS)  $(LOG)
!ENDIF

#
#   libmpr-version
#
DEPS_55 = $(DEPS_55) build\$(CONFIG)\inc\mpr-version.h
DEPS_55 = $(DEPS_55) build\$(CONFIG)\obj\mpr-version.obj

build\$(CONFIG)\bin\libmpr-version.lib: $(DEPS_55)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-version.lib
	"$(AR)" -nologo -out:$(BUILD)\bin\libmpr-version.lib "$(BUILD)\obj\mpr-version.obj" $(LOG)

#
#   libesp
#
!IF "$(ME_COM_SQLITE)" == "1"
DEPS_56 = $(DEPS_56) build\$(CONFIG)\bin\libsql.dll
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
DEPS_56 = $(DEPS_56) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_56 = $(DEPS_56) build\$(CONFIG)\bin\libmpr-version.lib
DEPS_56 = $(DEPS_56) build\$(CONFIG)\inc\edi.h
DEPS_56 = $(DEPS_56) build\$(CONFIG)\inc\esp.h
DEPS_56 = $(DEPS_56) build\$(CONFIG)\inc\mdb.h
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\edi.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\espAbbrev.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\espConfig.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\espFramework.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\espHtml.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\espRequest.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\espTemplate.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\mdb.obj
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\sdb.obj

!IF "$(ME_COM_SQLITE)" == "1"
LIBS_56 = $(LIBS_56) libsql.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_56 = $(LIBS_56) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_56 = $(LIBS_56) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_56 = $(LIBS_56) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_56 = $(LIBS_56) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_56 = $(LIBS_56) gdi32.lib
LIBPATHS_56 = $(LIBPATHS_56) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_56 = $(LIBS_56) libeay32.lib
LIBPATHS_56 = $(LIBPATHS_56) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_56 = $(LIBS_56) ssleay32.lib
LIBPATHS_56 = $(LIBPATHS_56) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_56 = $(LIBS_56) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_56 = $(LIBS_56) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_56 = $(LIBS_56) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_56 = $(LIBS_56) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_56 = $(LIBS_56) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_56 = $(LIBS_56) libpcre.lib
!ENDIF
LIBS_56 = $(LIBS_56) libmpr.lib
LIBS_56 = $(LIBS_56) libmpr-version.lib
LIBS_56 = $(LIBS_56) libmpr-version.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_56 = $(LIBS_56) libhttp.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_56 = $(LIBS_56) libsql.lib
!ENDIF

build\$(CONFIG)\bin\libesp.dll: $(DEPS_56)
	@echo ..... [Link] build\$(CONFIG)\bin\libesp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libesp.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\edi.obj" "$(BUILD)\obj\espAbbrev.obj" "$(BUILD)\obj\espConfig.obj" "$(BUILD)\obj\espFramework.obj" "$(BUILD)\obj\espHtml.obj" "$(BUILD)\obj\espRequest.obj" "$(BUILD)\obj\espTemplate.obj" "$(BUILD)\obj\mdb.obj" "$(BUILD)\obj\sdb.obj" $(LIBPATHS_56) $(LIBS_56) $(LIBS)  $(LOG)

#
#   espcmd
#
!IF "$(ME_COM_SQLITE)" == "1"
DEPS_57 = $(DEPS_57) build\$(CONFIG)\bin\libsql.dll
!ENDIF
DEPS_57 = $(DEPS_57) build\$(CONFIG)\bin\libesp.dll
DEPS_57 = $(DEPS_57) build\$(CONFIG)\obj\esp.obj

!IF "$(ME_COM_SQLITE)" == "1"
LIBS_57 = $(LIBS_57) libsql.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_57 = $(LIBS_57) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_57 = $(LIBS_57) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_57 = $(LIBS_57) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_57 = $(LIBS_57) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_57 = $(LIBS_57) gdi32.lib
LIBPATHS_57 = $(LIBPATHS_57) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_57 = $(LIBS_57) libeay32.lib
LIBPATHS_57 = $(LIBPATHS_57) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_57 = $(LIBS_57) ssleay32.lib
LIBPATHS_57 = $(LIBPATHS_57) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_57 = $(LIBS_57) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_57 = $(LIBS_57) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_57 = $(LIBS_57) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_57 = $(LIBS_57) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_57 = $(LIBS_57) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_57 = $(LIBS_57) libpcre.lib
!ENDIF
LIBS_57 = $(LIBS_57) libmpr.lib
LIBS_57 = $(LIBS_57) libmpr-version.lib
LIBS_57 = $(LIBS_57) libesp.lib
LIBS_57 = $(LIBS_57) libmpr-version.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_57 = $(LIBS_57) libhttp.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_57 = $(LIBS_57) libsql.lib
!ENDIF

build\$(CONFIG)\bin\esp.exe: $(DEPS_57)
	@echo ..... [Link] build\$(CONFIG)\bin\esp.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\esp.obj" $(LIBPATHS_57) $(LIBS_57) $(LIBS)  $(LOG)

#
#   extras
#
DEPS_58 = $(DEPS_58) src\esp-compile.json
DEPS_58 = $(DEPS_58) src\vcvars.bat

build\$(CONFIG)\.extras-modified: $(DEPS_58)
	@echo ..... [Copy] build\$(CONFIG)\bin
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\esp-compile.json+modified build\$(CONFIG)\bin\esp-compile.json $(LOG)
	copy /Y /B src\vcvars.bat+modified build\$(CONFIG)\bin\vcvars.bat $(LOG)
	copy /Y /B nul+modified build\$(CONFIG)\.extras-modified $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_59 = $(DEPS_59) build\$(CONFIG)\bin\libhttp.dll
DEPS_59 = $(DEPS_59) build\$(CONFIG)\obj\http.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_59 = $(LIBS_59) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_59 = $(LIBS_59) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_59 = $(LIBS_59) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_59 = $(LIBS_59) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_59 = $(LIBS_59) gdi32.lib
LIBPATHS_59 = $(LIBPATHS_59) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_59 = $(LIBS_59) libeay32.lib
LIBPATHS_59 = $(LIBPATHS_59) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_59 = $(LIBS_59) ssleay32.lib
LIBPATHS_59 = $(LIBPATHS_59) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_59 = $(LIBS_59) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_59 = $(LIBS_59) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_59 = $(LIBS_59) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_59 = $(LIBS_59) libpcre.lib
!ENDIF
LIBS_59 = $(LIBS_59) libhttp.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_59 = $(LIBS_59) libpcre.lib
!ENDIF
LIBS_59 = $(LIBS_59) libmpr.lib

build\$(CONFIG)\bin\http.exe: $(DEPS_59)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\http.obj" $(LIBPATHS_59) $(LIBS_59) $(LIBS)  $(LOG)
!ENDIF

#
#   install-certs
#
DEPS_60 = $(DEPS_60) src\certs\samples\ca.crt
DEPS_60 = $(DEPS_60) src\certs\samples\ca.key
DEPS_60 = $(DEPS_60) src\certs\samples\ec.crt
DEPS_60 = $(DEPS_60) src\certs\samples\ec.key
DEPS_60 = $(DEPS_60) src\certs\samples\roots.crt
DEPS_60 = $(DEPS_60) src\certs\samples\self.crt
DEPS_60 = $(DEPS_60) src\certs\samples\self.key
DEPS_60 = $(DEPS_60) src\certs\samples\test.crt
DEPS_60 = $(DEPS_60) src\certs\samples\test.key

build\$(CONFIG)\.install-certs-modified: $(DEPS_60)
	@echo ..... [Copy] build\$(CONFIG)\bin
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\certs\samples\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)
	copy /Y /B src\certs\samples\ca.key+modified build\$(CONFIG)\bin\ca.key $(LOG)
	copy /Y /B src\certs\samples\ec.crt+modified build\$(CONFIG)\bin\ec.crt $(LOG)
	copy /Y /B src\certs\samples\ec.key+modified build\$(CONFIG)\bin\ec.key $(LOG)
	copy /Y /B src\certs\samples\roots.crt+modified build\$(CONFIG)\bin\roots.crt $(LOG)
	copy /Y /B src\certs\samples\self.crt+modified build\$(CONFIG)\bin\self.crt $(LOG)
	copy /Y /B src\certs\samples\self.key+modified build\$(CONFIG)\bin\self.key $(LOG)
	copy /Y /B src\certs\samples\test.crt+modified build\$(CONFIG)\bin\test.crt $(LOG)
	copy /Y /B src\certs\samples\test.key+modified build\$(CONFIG)\bin\test.key $(LOG)
	copy /Y /B nul+modified build\$(CONFIG)\.install-certs-modified $(LOG)

#
#   server
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_61 = $(DEPS_61) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_61 = $(DEPS_61) build\$(CONFIG)\obj\server.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_61 = $(LIBS_61) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_61 = $(LIBS_61) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_61 = $(LIBS_61) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_61 = $(LIBS_61) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_61 = $(LIBS_61) gdi32.lib
LIBPATHS_61 = $(LIBPATHS_61) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_61 = $(LIBS_61) libeay32.lib
LIBPATHS_61 = $(LIBPATHS_61) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_61 = $(LIBS_61) ssleay32.lib
LIBPATHS_61 = $(LIBPATHS_61) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_61 = $(LIBS_61) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_61 = $(LIBS_61) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_61 = $(LIBS_61) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_61 = $(LIBS_61) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_61 = $(LIBS_61) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_61 = $(LIBS_61) libpcre.lib
!ENDIF
LIBS_61 = $(LIBS_61) libmpr.lib

build\$(CONFIG)\bin\server.exe: $(DEPS_61)
	@echo ..... [Link] build\$(CONFIG)\bin\server.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\server.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\server.obj" $(LIBPATHS_61) $(LIBS_61) $(LIBS)  $(LOG)

#
#   watchdog
#
DEPS_62 = $(DEPS_62) build\$(CONFIG)\bin\libmpr.dll
DEPS_62 = $(DEPS_62) build\$(CONFIG)\obj\watchdog.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_62 = $(LIBS_62) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_62 = $(LIBS_62) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_62 = $(LIBS_62) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_62 = $(LIBS_62) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_62 = $(LIBS_62) gdi32.lib
LIBPATHS_62 = $(LIBPATHS_62) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_62 = $(LIBS_62) libeay32.lib
LIBPATHS_62 = $(LIBPATHS_62) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_62 = $(LIBS_62) ssleay32.lib
LIBPATHS_62 = $(LIBPATHS_62) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_62 = $(LIBS_62) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_62 = $(LIBS_62) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_62 = $(LIBS_62) libmpr-mbedtls.lib
!ENDIF

build\$(CONFIG)\bin\espman.exe: $(DEPS_62)
	@echo ..... [Link] build\$(CONFIG)\bin\espman.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\espman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\watchdog.obj" $(LIBPATHS_62) $(LIBS_62) $(LIBS)  $(LOG)

#
#   installPrep
#

installPrep: $(DEPS_63)
	if [ "`id -u`" != 0 ]
	then echo "Must run as root. Rerun with sudo."
	exit 255
	fi

#
#   stop
#

stop: $(DEPS_64)
#  Omit build script stop

#
#   installBinary
#

installBinary: $(DEPS_65)
	if not exist "$(ME_VAPP_PREFIX)\man\man1" md "$(ME_VAPP_PREFIX)\man\man1"
	if not exist "$(ME_VAPP_PREFIX)\bin" md "$(ME_VAPP_PREFIX)\bin"
	copy /Y /B build\$(CONFIG)\bin\esp.exe+modified "$(ME_VAPP_PREFIX)\bin\esp.exe" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\bin" md "$(ME_VAPP_PREFIX)\bin"
	copy /Y /B build\$(CONFIG)\bin\espman.exe+modified "$(ME_VAPP_PREFIX)\bin\espman.exe" $(LOG)
!IF "$(ME_COM_SSL)" == "1"
	if not exist "$(ME_VAPP_PREFIX)\bin" md "$(ME_VAPP_PREFIX)\bin"
	copy /Y /B build\$(CONFIG)\bin\roots.crt+modified "$(ME_VAPP_PREFIX)\bin\roots.crt" $(LOG)
!ENDIF
	if not exist "$(ME_VAPP_PREFIX)\bin" md "$(ME_VAPP_PREFIX)\bin"
	copy /Y /B build\$(CONFIG)\bin\esp-compile.json+modified "$(ME_VAPP_PREFIX)\bin\esp-compile.json" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\vcvars.bat+modified "$(ME_VAPP_PREFIX)\bin\vcvars.bat" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\bin" md "$(ME_VAPP_PREFIX)\bin"
	copy /Y /B build\$(CONFIG)\bin\libhttp.dll+modified "$(ME_VAPP_PREFIX)\bin\libhttp.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libmpr.dll+modified "$(ME_VAPP_PREFIX)\bin\libmpr.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libpcre.dll+modified "$(ME_VAPP_PREFIX)\bin\libpcre.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libsql.dll+modified "$(ME_VAPP_PREFIX)\bin\libsql.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libesp.dll+modified "$(ME_VAPP_PREFIX)\bin\libesp.dll" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\bin" md "$(ME_VAPP_PREFIX)\bin"
	copy /Y /B build\$(CONFIG)\bin\libesp.lib+modified "$(ME_VAPP_PREFIX)\bin\libesp.lib" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libpcre.lib+modified "$(ME_VAPP_PREFIX)\bin\libpcre.lib" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libhttp.lib+modified "$(ME_VAPP_PREFIX)\bin\libhttp.lib" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libmpr.lib+modified "$(ME_VAPP_PREFIX)\bin\libmpr.lib" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\inc" md "$(ME_VAPP_PREFIX)\inc"
	copy /Y /B build\$(CONFIG)\inc\me.h+modified "$(ME_VAPP_PREFIX)\inc\me.h" $(LOG)
	copy /Y /B src\esp.h+modified "$(ME_VAPP_PREFIX)\inc\esp.h" $(LOG)
	copy /Y /B src\edi.h+modified "$(ME_VAPP_PREFIX)\inc\edi.h" $(LOG)
	copy /Y /B src\osdep\osdep.h+modified "$(ME_VAPP_PREFIX)\inc\osdep.h" $(LOG)
	copy /Y /B src\http\http.h+modified "$(ME_VAPP_PREFIX)\inc\http.h" $(LOG)
	copy /Y /B src\mpr\mpr.h+modified "$(ME_VAPP_PREFIX)\inc\mpr.h" $(LOG)
	copy /Y /B src\pcre\pcre.h+modified "$(ME_VAPP_PREFIX)\inc\pcre.h" $(LOG)
	copy /Y /B src\sqlite\sqlite3.h+modified "$(ME_VAPP_PREFIX)\inc\sqlite3.h" $(LOG)

#
#   start
#

start: $(DEPS_66)
#  Omit build script start

#
#   install
#
DEPS_67 = $(DEPS_67) installPrep
DEPS_67 = $(DEPS_67) stop
DEPS_67 = $(DEPS_67) installBinary
DEPS_67 = $(DEPS_67) start

install: $(DEPS_67)
#  Omit build script install

#
#   uninstall
#
DEPS_68 = $(DEPS_68) stop

uninstall: $(DEPS_68)
#  Omit build script uninstall

#
#   uninstallBinary
#

uninstallBinary: $(DEPS_69)
	if exist "$(ME_VAPP_PREFIX)" rd /Q /S "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)\bin" rd /Q "$(ME_VAPP_PREFIX)\bin"
	if exist "$(ME_VAPP_PREFIX)\inc" rd /Q "$(ME_VAPP_PREFIX)\inc"
	if exist "$(ME_VAPP_PREFIX)\man" rd /Q "$(ME_VAPP_PREFIX)\man"
	if exist "$(ME_VAPP_PREFIX)" rd /Q "$(ME_VAPP_PREFIX)"

#
#   version
#

version: $(DEPS_70)
	echo $(VERSION)

